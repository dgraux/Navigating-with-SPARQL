
# Distance bewteen points on Earth along a great-circle path
# ==========================================================
#
# Damien Graux (Inria), 2022

# This file provides a SPARQL set of bindings used to compute the
# distance between two points on Earth represented by pairs of
# (lat,lon), following a great-circle path at the surface of the
# planet. (It is based on the haversine formula.)

# General useful bindings
BIND ( xsd:double("3.14159265359") AS ?PI )  # π (11 digits).
BIND ( xsd:double("6.28318530718") AS ?2PI ) # 2π (11 digits).
BIND ( xsd:double("6371") AS ?E_radius ) # Earth's radius, in km.

# [Inputs] It assumes that the variables representing the points are
# respectively ( ?lat1 , ?lon1 ) and ( ?lat2 , ?lon2 ) and that they
# are represented in degrees.

# Possible conversions in radians:
BIND ( (xsd:double(?lat1) * ?PI/180) AS ?lar1 )
BIND ( (xsd:double(?lon1) * ?PI/180) AS ?lor1 )
BIND ( (xsd:double(?lat2) * ?PI/180) AS ?lar2 )
BIND ( (xsd:double(?lon2) * ?PI/180) AS ?lor2 )

BIND ( ((xsd:double(?lat2)-xsd:double(?lat1)) * ?PI/180) AS ?dellar )
BIND ( ((xsd:double(?lon2)-xsd:double(?lon1)) * ?PI/180) AS ?dellor )

# [Output] The result will be stored in ?distance.

# [Warning] The following variables are introduced in the following
# block: ?PI, ?2PI, ?E_radius, ?lat1, ?lon1, ?lat2, ?lon2, ?lar1,
# ?lor1, ?lar2, ?lor2, ?Asub1, ?Asub2, ?Asub3, ?Asub4, ?A, ?sub1,
# ?sub2, ?sub3, ?sub4, ?sub5, ?sub6, ?sub7, ?sub8, ?sub9 and
# ?distance. Please make sure not to create conflicts with existing
# variables of yours!

# [Note] The following bindings are making use of developments in
# series to approximate some mathematical functions. Practically, we
# use here the first 7 terms of the series.

######################################################################
##############  BEGINNING OF GENERATED SPARQL BINDINGS  ##############

BIND ((0+1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/1.0
+-1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/6.0
+1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/120.0
+-1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/5040.0
+1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/362880.0
+-1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/39916800.0
+1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/6227020800.0
+-1*(1* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) )* ((?dellar/2)-?2PI*FLOOR((?dellar/2)/?2PI) ))/1307674368000.0
)AS ?Asub1)

BIND ((0+1*(1)/1.0
+-1*(1* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) ))/2.0
+1*(1* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) ))/24.0
+-1*(1* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) ))/720.0
+1*(1* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) ))/40320.0
+-1*(1* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) ))/3628800.0
+1*(1* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) ))/479001600.0
+-1*(1* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) )* ((?lor1)-?2PI*FLOOR((?lor1)/?2PI) ))/87178291200.0
)AS ?Asub2)

BIND ((0+1*(1)/1.0
+-1*(1* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) ))/2.0
+1*(1* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) ))/24.0
+-1*(1* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) ))/720.0
+1*(1* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) ))/40320.0
+-1*(1* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) ))/3628800.0
+1*(1* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) ))/479001600.0
+-1*(1* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) )* ((?lor2)-?2PI*FLOOR((?lor2)/?2PI) ))/87178291200.0
)AS ?Asub3)

BIND ((0+1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/1.0
+-1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/6.0
+1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/120.0
+-1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/5040.0
+1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/362880.0
+-1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/39916800.0
+1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/6227020800.0
+-1*(1* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) )* ((?dellor/2)-?2PI*FLOOR((?dellor/2)/?2PI) ))/1307674368000.0
)AS ?Asub4)

BIND ( ( FLOOR(( (1*(?Asub1)*(?Asub1)) +?Asub2*?Asub3* (1*(?Asub4)*(?Asub4)) )*100000)/100000 ) AS ?A )

BIND ((0+(1*(((?A)-1)/((?A)+1)))/1.0
+(1*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1)))/3.0
+(1*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1)))/5.0
+(1*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1)))/7.0
+(1*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1)))/9.0
+(1*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1)))/11.0
+(1*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1)))/13.0
+(1*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1))*(((?A)-1)/((?A)+1)))/15.0
)AS ?sub1)

BIND ((0+(1)/1.0
+(1*?sub1)/1.0
+(1*?sub1*?sub1)/2.0
+(1*?sub1*?sub1*?sub1)/6.0
+(1*?sub1*?sub1*?sub1*?sub1)/24.0
+(1*?sub1*?sub1*?sub1*?sub1*?sub1)/120.0
+(1*?sub1*?sub1*?sub1*?sub1*?sub1*?sub1)/720.0
+(1*?sub1*?sub1*?sub1*?sub1*?sub1*?sub1*?sub1)/5040.0
)AS ?sub2)

BIND ((0+(1*(((1-?A)-1)/((1-?A)+1)))/1.0
+(1*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1)))/3.0
+(1*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1)))/5.0
+(1*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1)))/7.0
+(1*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1)))/9.0
+(1*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1)))/11.0
+(1*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1)))/13.0
+(1*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1))*(((1-?A)-1)/((1-?A)+1)))/15.0
)AS ?sub3)

BIND ((0+(1)/1.0
+(1*?sub3)/1.0
+(1*?sub3*?sub3)/2.0
+(1*?sub3*?sub3*?sub3)/6.0
+(1*?sub3*?sub3*?sub3*?sub3)/24.0
+(1*?sub3*?sub3*?sub3*?sub3*?sub3)/120.0
+(1*?sub3*?sub3*?sub3*?sub3*?sub3*?sub3)/720.0
+(1*?sub3*?sub3*?sub3*?sub3*?sub3*?sub3*?sub3)/5040.0
)AS ?sub4)

BIND ((?sub2*?sub2+?sub4*?sub4)AS ?sub5)

BIND ((0+(1*(( ?sub5-1)/( ?sub5+1)))/1.0
+(1*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1)))/3.0
+(1*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1)))/5.0
+(1*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1)))/7.0
+(1*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1)))/9.0
+(1*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1)))/11.0
+(1*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1)))/13.0
+(1*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1))*(( ?sub5-1)/( ?sub5+1)))/15.0
)AS ?sub6)

BIND ((0+(1)/1.0
+(1*?sub6)/1.0
+(1*?sub6*?sub6)/2.0
+(1*?sub6*?sub6*?sub6)/6.0
+(1*?sub6*?sub6*?sub6*?sub6)/24.0
+(1*?sub6*?sub6*?sub6*?sub6*?sub6)/120.0
+(1*?sub6*?sub6*?sub6*?sub6*?sub6*?sub6)/720.0
+(1*?sub6*?sub6*?sub6*?sub6*?sub6*?sub6*?sub6)/5040.0
)AS ?sub7)

BIND ((?sub2/( ?sub7+?sub4))AS ?sub8)

BIND ((0+1*(1* ?sub8)/1.0
+-1*(1* ?sub8* ?sub8* ?sub8)/3.0
+1*(1* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8)/5.0
+-1*(1* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8)/7.0
+1*(1* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8)/9.0
+-1*(1* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8)/11.0
+1*(1* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8)/13.0
+-1*(1* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8* ?sub8)/15.0
)AS ?sub9)

BIND ( ( FLOOR((?E_radius*2*2 * ?sub9)*100000)/100000 ) AS ?distance )

### END OF BINDINGS
### result variable: ?distance
######################################################################
